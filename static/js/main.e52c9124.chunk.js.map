{"version":3,"sources":["SearchBar/index.tsx","Giphys/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SearchBar","props","useState","searchQuery","setSearchQuery","className","onSubmit","e","preventDefault","onSearch","name","placeholder","type","value","onChange","currentTarget","onClick","GiphyConfig","getTrendingGifs","a","limit","offset","queryParameters","URLSearchParams","append","toString","trendingUrl","fetch","trendingResp","json","trendingGifs","data","pagination","q","searchUrl","searchResp","gifSearchResults","Giphys","searching","setSearching","gifs","setGifs","scrolledToBottom","setScrolledToBottom","defaultLimit","setPagination","fetchNextBatch","setFetchNextBatch","clickedGif","setClickedGif","handleScrollEvent","_e","window","innerHeight","document","documentElement","scrollTop","offsetHeight","useEffect","mounted","addEventListener","alert","go","removeEventListener","nextPagination","then","uniqueGifs","concat","filter","d","findIndex","g","id","catch","console","error","getSearchGifs","finally","map","src","images","fixed_height_downsampled","url","alt","slug","title","original","App","sq","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e52c9124.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\ntype TSearchBarProps = {\n\tonSearch: (searchQuery: string) => void;\n};\n\nfunction SearchBar(props: TSearchBarProps) {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\treturn (\n\t\t<div className={\"search-bar\"}>\n\t\t\t<form\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tprops.onSearch(searchQuery);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"search-bar-input\"}\n\t\t\t\t\tname=\"search-bar\"\n\t\t\t\t\tplaceholder=\"Search Giphy...\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={searchQuery}\n\t\t\t\t\tonChange={(e) => setSearchQuery(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"search-bar-btn search-bar-btn-search\"}\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tvalue=\" 🔍 \"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\tclassName={\"search-bar-btn search-bar-btn-clear\"}\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tvalue=\" ❌ \"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetSearchQuery(\"\");\n\t\t\t\t\t\tprops.onSearch(\"\");\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\n\nexport default SearchBar;\n","import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\ntype TGiphysProps = {\n\tsearchQuery: string;\n};\n\ntype TGiphyImage = {\n\turl: string;\n};\ntype TGiphyImageKeys = \"original\" | \"downsized\" | \"fixed_height_downsampled\";\ntype TGiphyData = {\n\tid: string;\n\ttitle: string;\n\tslug: string;\n\timages: {\n\t\t[k in TGiphyImageKeys]: TGiphyImage;\n\t};\n};\ntype TPagination = {\n\ttotal_count: number;\n\tcount: number;\n\toffset: number;\n};\ntype TTrendingGifsResponse = {\n\tdata: TGiphyData[];\n\tpagination: TPagination;\n};\ntype TQueryPagination = {\n\tlimit: number;\n\toffset: number;\n};\n\nconst GiphyConfig = {\n\tapi_key: \"0FN4Q05kFTNZTyNkHLHw4kXG7epp4mvt\",\n\ttrendingUrl: \"https://api.giphy.com/v1/gifs/trending\",\n\tsearchUrl: \"https://api.giphy.com/v1/gifs/search\",\n};\n\nasync function getTrendingGifs({ limit, offset }: TQueryPagination) {\n\tconst queryParameters = new URLSearchParams();\n\tqueryParameters.append(\"api_key\", GiphyConfig.api_key);\n\tqueryParameters.append(\"limit\", limit.toString());\n\tqueryParameters.append(\"offset\", offset.toString());\n\tconst trendingUrl = `${GiphyConfig.trendingUrl}?${queryParameters}`;\n\n\ttry {\n\t\tconst trendingResp = await fetch(trendingUrl);\n\t\tconst trendingGifs: TTrendingGifsResponse = await trendingResp.json();\n\t\tconst { data, pagination } = trendingGifs;\n\t\treturn {\n\t\t\tdata,\n\t\t\tpagination,\n\t\t};\n\t} catch (e) {\n\t\tthrow e;\n\t}\n}\n\nasync function getSearchGifs({ q }: { q: string }) {\n\tconst queryParameters = new URLSearchParams();\n\tqueryParameters.append(\"api_key\", GiphyConfig.api_key);\n\tqueryParameters.append(\"q\", q);\n\tconst searchUrl = `${GiphyConfig.searchUrl}?${queryParameters}`;\n\n\ttry {\n\t\tconst searchResp = await fetch(searchUrl);\n\t\tconst gifSearchResults: TTrendingGifsResponse = await searchResp.json();\n\t\tconst { data, pagination } = gifSearchResults;\n\t\treturn {\n\t\t\tdata,\n\t\t\tpagination,\n\t\t};\n\t} catch (e) {\n\t\tthrow e;\n\t}\n}\n\nfunction Giphys(props: TGiphysProps) {\n\tconst [searching, setSearching] = useState(false);\n\tconst [gifs, setGifs] = useState<any[]>([]);\n\tconst [scrolledToBottom, setScrolledToBottom] = useState(false);\n\tconst defaultLimit = 24;\n\tconst [pagination, setPagination] = useState<TQueryPagination>({\n\t\tlimit: defaultLimit,\n\t\toffset: 0,\n\t});\n\tconst [fetchNextBatch, setFetchNextBatch] = useState(false);\n\tconst [clickedGif, setClickedGif] = useState(null);\n\n\tfunction handleScrollEvent(_e) {\n\t\tif (\n\t\t\twindow.innerHeight + document.documentElement.scrollTop + 200 >=\n\t\t\tdocument.documentElement.offsetHeight\n\t\t) {\n\t\t\tsetScrolledToBottom(true);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\n\t\tasync function go() {\n\t\t\ttry {\n\t\t\t\tconst { data } = await getTrendingGifs({\n\t\t\t\t\tlimit: defaultLimit,\n\t\t\t\t\toffset: 0,\n\t\t\t\t});\n\t\t\t\tif (mounted) {\n\t\t\t\t\tsetGifs(data);\n\t\t\t\t\tsetPagination({\n\t\t\t\t\t\tlimit: defaultLimit + defaultLimit,\n\t\t\t\t\t\toffset: defaultLimit,\n\t\t\t\t\t});\n\t\t\t\t\twindow.addEventListener(\"scroll\", handleScrollEvent);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\talert(`There was an error loading gifs from giphy: ${e}`);\n\t\t\t}\n\t\t}\n\n\t\tgo();\n\t\treturn () => {\n\t\t\tmounted = false;\n\t\t\twindow.removeEventListener(\"scroll\", handleScrollEvent);\n\t\t};\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (scrolledToBottom) {\n\t\t\tsetFetchNextBatch(true);\n\t\t}\n\t}, [scrolledToBottom]);\n\n\tuseEffect(() => {\n\t\tif (searching) {\n\t\t\tsetFetchNextBatch(false);\n\t\t}\n\n\t\tif (!searching && fetchNextBatch) {\n\t\t\tconst nextPagination = {\n\t\t\t\tlimit: pagination.limit + defaultLimit,\n\t\t\t\toffset: pagination.offset + defaultLimit,\n\t\t\t};\n\t\t\tgetTrendingGifs(nextPagination)\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetFetchNextBatch(false);\n\t\t\t\t\tsetScrolledToBottom(false);\n\t\t\t\t\tconst uniqueGifs = gifs.concat(\n\t\t\t\t\t\tdata.filter((d) => gifs.findIndex((g) => g.id === d.id) === -1)\n\t\t\t\t\t);\n\t\t\t\t\tsetGifs(uniqueGifs);\n\t\t\t\t\tsetPagination(nextPagination);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t});\n\t\t}\n\t}, [fetchNextBatch]);\n\n\tuseEffect(() => {\n\t\tconst { searchQuery } = props;\n\n\t\tif (searchQuery !== \"\") {\n\t\t\tgetSearchGifs({ q: searchQuery })\n\t\t\t\t.then(({ data }) => {\n\t\t\t\t\tsetGifs(data);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsetSearching(true);\n\t\t\t\t});\n\t\t} else if (searchQuery === \"\") {\n\t\t\tsetSearching(false);\n\t\t\tsetGifs([]);\n\t\t\tsetPagination({\n\t\t\t\tlimit: defaultLimit,\n\t\t\t\toffset: 0,\n\t\t\t});\n\t\t\tsetFetchNextBatch(true);\n\t\t}\n\t}, [props]);\n\n\treturn (\n\t\t<div className=\"giphs-wrap\">\n\t\t\t<div className=\"giphs\">\n\t\t\t\t{gifs.map((g) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tkey={g.id}\n\t\t\t\t\t\t\tclassName=\"giph\"\n\t\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\tsetClickedGif(g);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={g.images.fixed_height_downsampled.url} alt={g.slug} />\n\t\t\t\t\t\t\t<div className=\"title\">{g.title}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{clickedGif !== null && (\n\t\t\t\t<>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"giph-modal-overlay\"\n\t\t\t\t\t\tonClick={() => setClickedGif(null)}\n\t\t\t\t\t></div>\n\t\t\t\t\t<div className=\"giph-modal\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"giph-modal-close\"\n\t\t\t\t\t\t\tonClick={() => setClickedGif(null)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t❌{\" \"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<img src={clickedGif.images.original.url} alt={clickedGif.slug} />\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default Giphys;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport SearchBar from \"./SearchBar\";\nimport Giphys from \"./Giphys\";\n\nfunction App() {\n\tconst [searchQuery, setSearchQuery] = useState(\"\");\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<SearchBar onSearch={(sq) => setSearchQuery(sq)} />\n\t\t\t<Giphys searchQuery={searchQuery} />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}